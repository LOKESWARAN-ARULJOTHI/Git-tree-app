{"version":3,"sources":["App.js","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","App","useState","data","setData","loading","setLoading","url","setUrl","error","setError","copied","setCopied","handleSubmit","useCallback","e","a","preventDefault","axios","post","repourl","csrfmiddlewaretoken","credentials","method","mode","headers","Accept","res","console","log","message","copyTree","treeText","reduce","acc","cur","navigator","clipboard","writeText","setTimeout","align","justify","maxWidth","width","direction","fontSize","mt","mb","color","as","target","href","borderBottom","onSubmit","type","value","id","required","placeholder","onChange","_focus","outline","variant","bg","_hover","p","pos","height","overflowY","size","thickness","status","mr","top","right","onClick","alt","src","map","item","my","textAlign","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a8d2d08.chunk.js","sourcesContent":["import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Box,\n  Spinner,\n  Flex,\n  Code,\n  Heading,\n  Divider,\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Text,\n  Img,\n} from \"@chakra-ui/react\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nfunction App() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [url, setUrl] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const handleSubmit = useCallback(\n    async (e) => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        const res = await axios.post(\n          \"/\",\n          { repourl: url, csrfmiddlewaretoken: getCookie(\"csrftoken\") },\n          {\n            credentials: \"include\",\n            method: \"POST\",\n            mode: \"same-origin\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              \"X-CSRFToken\": getCookie(\"csrftoken\"),\n            },\n          }\n        );\n        console.log(res);\n        setError(null);\n        setData(res.data);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        setError(\"Please enter valid URL\");\n        console.log(err.message);\n      }\n    },\n    [url]\n  );\n  const copyTree = async () => {\n    try {\n      if (copied) {\n        return;\n      }\n\n      let treeText = data.reduce((acc, cur) => acc + `${cur}\\n`, \"```\\n\");\n      treeText +=\n        \"```\\nÂ©generated by [GitTree](https://gittree.herokuapp.com/)\\n\";\n      await navigator.clipboard.writeText(treeText);\n      setTimeout(() => setCopied(false), 2000);\n      setCopied(true);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Box maxWidth=\"600px\" width=\"95vw\">\n        <Flex direction=\"column\" align=\"center\">\n          <Heading\n            fontSize={[\"5xl\", \"7xl\"]}\n            mt=\".5rem\"\n            mb=\"1rem\"\n            color=\"blue.900\"\n            as=\"a\"\n            target=\"_blank\"\n            href=\"https://github.com/LOKESWARAN-ARULJOTHI/Git-tree-app\"\n            borderBottom=\"3px solid purple\"\n          >\n            GitTree\n          </Heading>\n\n          <Box as=\"form\" onSubmit={handleSubmit} mb=\"2rem\" width=\"100%\">\n            <Input\n              type=\"hidden\"\n              name=\"csrfmiddlewaretoken\"\n              value={getCookie(\"csrftoken\")}\n            />\n            <FormControl id=\"email\">\n              <Flex\n                direction={[\"column\", \"row\"]}\n                align={[\"stretch\", \"flex-end\"]}\n                justify={[\"flex-start\", \"space-between\"]}\n              >\n                <Box width={[\"100%\", \"80%\"]} mb={[\".5rem\", \"0\"]}>\n                  <FormLabel color=\"blue.600\">\n                    Enter your Github Repository URL\n                  </FormLabel>\n                  <Input\n                    type=\"url\"\n                    name=\"repourl\"\n                    id=\"repourl\"\n                    required\n                    value={url}\n                    placeholder=\"Eg: https://github.com/LOKESWARAN-ARULJOTHI/Git-tree-app\"\n                    onChange={(e) => setUrl(e.target.value)}\n                  />\n                </Box>\n                <Button\n                  _focus={{ outline: \"none !important\" }}\n                  variant=\"solid\"\n                  type=\"submit\"\n                  bg=\"blue.900\"\n                  color=\"white\"\n                  _hover={{\n                    bg: \"blue.500\",\n                  }}\n                  width={[\"100%\", \"15%\"]}\n                >\n                  Get Tree\n                </Button>\n              </Flex>\n            </FormControl>\n          </Box>\n        </Flex>\n\n        <Code\n          width=\"100%\"\n          p=\"1rem\"\n          pos=\"relative\"\n          height=\"63vh\"\n          overflowY=\"scroll\"\n          variant=\"solid\"\n          bg=\"blue.900\"\n        >\n          {loading ? (\n            <Flex justify=\"center\" align=\"center\">\n              <Spinner size=\"xl\" thickness=\"5px\" color=\"white\" />\n            </Flex>\n          ) : error ? (\n            <Alert status=\"error\" bg=\"blue.900\">\n              <AlertIcon color=\"white\" />\n              <AlertTitle mr={2} color=\"white\">\n                Error!\n              </AlertTitle>\n              <AlertDescription color=\"white\">{error}</AlertDescription>\n            </Alert>\n          ) : data.length > 0 ? (\n            <>\n              <Button\n                bg=\"whiteAlpha.900\"\n                pos=\"absolute\"\n                top=\"1rem\"\n                right=\"1rem\"\n                _hover={{\n                  bg: \"whiteAlpha.700\",\n                }}\n                onClick={copyTree}\n                variant=\"solid\"\n                color=\"white\"\n                _focus={{ outline: \"none !important\" }}\n              >\n                {copied ? (\n                  <Text color=\"blue.900\">Copied</Text>\n                ) : (\n                  <Img\n                    width=\"1.4rem\"\n                    height=\"1.4rem\"\n                    alt=\"clipboard-icon\"\n                    src=\"https://img.icons8.com/fluency-systems-regular/48/1A365D/clipboard.png\"\n                  />\n                )}\n              </Button>\n              {data.map((item) => (\n                <pre>{item}</pre>\n              ))}\n              <br />Â© Generated by GitTree\n            </>\n          ) : null}\n        </Code>\n        <Divider my=\".8rem\" />\n        <Text color=\"purple\" textAlign=\"center\">\n          2021 &copy;{\" \"}\n          <Text\n            as=\"a\"\n            target=\"_blank\"\n            href=\"https://github.com/LOKESWARAN-ARULJOTHI/Git-tree-app\"\n          >\n            GitTree\n          </Text>\n        </Text>\n      </Box>\n    </Flex>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}