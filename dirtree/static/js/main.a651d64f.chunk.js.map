{"version":3,"sources":["App.js","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","App","useState","data","setData","loading","setLoading","url","setUrl","error","setError","handleSubmit","useCallback","e","a","preventDefault","axios","post","repourl","csrfmiddlewaretoken","credentials","method","mode","headers","Accept","res","console","log","message","copyTree","treeText","reduce","acc","cur","navigator","clipboard","writeText","align","justify","width","textAlign","fontSize","my","color","mb","as","onSubmit","type","value","id","required","placeholder","onChange","target","colorScheme","size","thickness","status","mr","p","pos","icon","Copy","top","right","onClick","map","item","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a651d64f.chunk.js","sourcesContent":["import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Box,\n  Spinner,\n  Flex,\n  Code,\n  Heading,\n  Divider,\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { CopyIcon } from \"@chakra-ui/icons\";\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [url, setUrl] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const handleSubmit = useCallback(\n    async (e) => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        const res = await axios.post(\n          \"/\",\n          {\n            repourl: url,\n            csrfmiddlewaretoken: getCookie(\"csrftoken\"),\n          },\n          {\n            credentials: \"include\",\n            method: \"POST\",\n            mode: \"same-origin\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              \"X-CSRFToken\": getCookie(\"csrftoken\"),\n            },\n          }\n        );\n\n        console.log(res);\n        setError(null);\n        setData(res.data);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        setError(\"Please enter valid URL\");\n        console.log(err.message);\n      }\n    },\n    [url]\n  );\n\n  const copyTree = async () => {\n    try {\n      let treeText = data.reduce((acc, cur) => acc + `${cur}\\n`, \"```\\n\");\n\n      treeText +=\n        \"```\\n©generated by [GitTree](https://github.com/LOKESWARAN-ARULJOTHI/Git-tree-app)\\n\";\n      await navigator.clipboard.writeText(treeText);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Box width=\"600px\">\n        <Heading textAlign=\"center\" fontSize=\"7xl\" my=\".5rem\" color=\"blue.900\">\n          GitTree\n        </Heading>\n        <Divider mb=\"1rem\" />\n        <Box as=\"form\" onSubmit={handleSubmit} mb=\"2rem\">\n          <Input\n            type=\"hidden\"\n            name=\"csrfmiddlewaretoken\"\n            value={getCookie(\"csrftoken\")}\n          />\n          <FormControl id=\"email\">\n            <Flex align=\"flex-end\" justify=\"space-between\">\n              <Box width=\"80%\">\n                <FormLabel color=\"blue.600\">Github Repository URL</FormLabel>\n\n                <Input\n                  type=\"url\"\n                  name=\"repourl\"\n                  id=\"repourl\"\n                  required\n                  value={url}\n                  placeholder=\"Enter a GitHub Repo url\"\n                  onChange={(e) => setUrl(e.target.value)}\n                />\n              </Box>\n              <Button type=\"submit\" colorScheme=\"blue\" width=\"15%\">\n                Get Tree\n              </Button>\n            </Flex>\n          </FormControl>\n        </Box>\n\n        <Box width=\"100%\">\n          {loading ? (\n            <Flex justify=\"center\" align=\"center\">\n              <Spinner size=\"xl\" thickness=\"5px\" color=\"purple\" />\n            </Flex>\n          ) : error ? (\n            <Alert status=\"error\">\n              <AlertIcon />\n              <AlertTitle mr={2}>{\"Error!\"}</AlertTitle>\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          ) : data.length > 0 ? (\n            <Box>\n              <Code width=\"100%\" p=\"1rem\" pos=\"relative\">\n                <IconButton\n                  icon={<CopyIcon />}\n                  colorScheme=\"blue\"\n                  pos=\"absolute\"\n                  top=\"1rem\"\n                  right=\"1rem\"\n                  onClick={copyTree}\n                />\n                {data.map((item) => (\n                  <pre>{item}</pre>\n                ))}\n                ©generated by GitTree\n              </Code>\n            </Box>\n          ) : null}\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}